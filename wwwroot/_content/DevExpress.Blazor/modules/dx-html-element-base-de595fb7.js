import{D as t}from"./dom-b082d2b1.js";import{D as e}from"./data-qa-utils-8be7c726.js";var n,i;!function(t){t[t.None=0]="None",t[t.Click=1]="Click",t[t.Dragging=2]="Dragging",t[t.ClickAndDragging=3]="ClickAndDragging"}(n||(n={})),function(t){t[t.Stopped=0]="Stopped",t[t.WaitingForDragging=1]="WaitingForDragging",t[t.Dragging=2]="Dragging"}(i||(i={}));class o extends CustomEvent{constructor(t){super(o.eventName,{detail:t,bubbles:!0,composed:!1,cancelable:!0})}}o.eventName="dxpointerdragstart";class r extends CustomEvent{constructor(t){super(r.eventName,{detail:t,bubbles:!0,composed:!1,cancelable:!0})}}r.eventName="dxpointerdragstop";class s extends Event{constructor(){super(s.eventName,{bubbles:!0,composed:!1,cancelable:!0})}}s.eventName="dxpointerdatgcancel";class a extends CustomEvent{constructor(t){super(a.eventName,{detail:t,bubbles:!0,composed:!1,cancelable:!0})}}a.eventName="dxclick";const c=document.createElement("template");c.innerHTML="<slot />";class d extends HTMLElement{constructor(){super(),this.preventClickEvent=!1,this.boundOnPointerDownHandler=this.onPointerDown.bind(this),this.boundOnPointerMoveHandler=this.onPointerMove.bind(this),this.boundOnPointerUpHandler=this.onPointerUp.bind(this),this.boundOnPointerCancelHandler=this.onPointerCancel.bind(this),this.boundOnGotPointerCaptureHandler=this.onGotPointerCapture.bind(this),this.boundOnPointerClickHandler=this.onPointerClick.bind(this),this._isInitialized=!1,this._handlePointerEventsMode=n.None,this.pointerInteractionState=i.Stopped,this.prepareShadowDom()}get isInitialized(){return this._isInitialized}onSlotChange(){this.initializeComponent(),this._isInitialized=!0,e.setLoaded(this),this.afterInitialize()}initializeComponent(){this.addPointerEventsSubscriptions()}afterInitialize(){}disconnectedCallback(){this._isInitialized=!1,e.removeLoaded(this),this.removePointerEventsSubscriptions(),this.disposeComponent()}disposeComponent(){this.removePointerEventsSubscriptions()}getContentTemplate(){return c}prepareShadowDom(){const t=this.attachShadow({mode:"open"});t.appendChild(this.getContentTemplate().content.cloneNode(!0));const e=t.querySelector("slot");return e.addEventListener("slotchange",this.onSlotChange.bind(this)),e}static preventDefaultBrowserBehaviour(t){t.cancelable&&t.preventDefault()}onGotPointerCapture(t){if(!this.pointerDownContext||!this.pointerDownContext.isLongTap)return;const e=t.target;e&&e.hasPointerCapture(t.pointerId)&&e.releasePointerCapture(t.pointerId)}get handlePointerEventsMode(){return this._handlePointerEventsMode}set handlePointerEventsMode(t){this._handlePointerEventsMode=t,this.onHandlePointerEventsModeChanged()}onHandlePointerEventsModeChanged(){this.isInitialized&&(this.removePointerEventsSubscriptions(),this.addPointerEventsSubscriptions())}addPointerEventsSubscriptions(){this.addEventListener("click",this.boundOnPointerClickHandler),this.addEventListener("pointerdown",this.boundOnPointerDownHandler),this.addEventListener("gotpointercapture",this.boundOnGotPointerCaptureHandler)}removePointerEventsSubscriptions(){this.removeEventListener("click",this.boundOnPointerClickHandler),this.removeEventListener("pointerdown",this.boundOnPointerDownHandler),this.removeEventListener("gotpointercapture",this.boundOnGotPointerCaptureHandler)}onPointerDown(e){var o;this.handlePointerEventsMode===n.Dragging||this.handlePointerEventsMode===n.ClickAndDragging?0===e.button&&(this.pointerDownContext={source:e,isTouch:"touch"===e.pointerType,isLongTap:!1},this.pointerInteractionState=i.WaitingForDragging,this.pointerDownContext.isTouch&&(this.touchDeviceInteractionTimer=setTimeout(this.onTouchDeviceInteractionTimerTimeout.bind(this),500)),this.preventClickEvent=!1,document.addEventListener("pointermove",this.boundOnPointerMoveHandler),document.addEventListener("pointercancel",this.boundOnPointerCancelHandler),document.addEventListener("pointerup",this.boundOnPointerUpHandler),t.addClassName(document.body,"dx-prevent-selection")):e.shiftKey&&(null===(o=null===document||void 0===document?void 0:document.getSelection())||void 0===o||o.removeAllRanges())}onPointerMove(t){var e;this.pointerInteractionState!==i.Stopped&&this.pointerInteractionState===i.WaitingForDragging&&((null===(e=this.pointerDownContext)||void 0===e?void 0:e.isTouch)?this.isDistanceExceedLimit(t)&&this.stopPointerInteraction():this.isDistanceExceedLimit(t)&&this.startPointerInteraction())}onPointerCancel(t){if(this.pointerInteractionState===i.Stopped)return;this.stopPointerInteraction();const e=new s;this.dispatchEvent(e)}onPointerUp(t){if(this.pointerDownContext&&this.pointerInteractionState===i.Dragging){const e=new r({source:t,isTouch:this.pointerDownContext.isTouch,isLongTap:this.pointerDownContext.isLongTap});this.dispatchEvent(e),this.pointerDownContext.isTouch||(this.preventClickEvent=!0)}this.stopPointerInteraction(),this.releasePointerCapture(t.pointerId)}onPointerClick(t){if(this.handlePointerEventsMode!==n.Click&&this.handlePointerEventsMode!==n.ClickAndDragging)return;if(this.preventClickEvent||0!==t.button)return;const e=new a({source:t,isTouch:!!this.pointerDownContext&&this.pointerDownContext.isTouch});this.dispatchEvent(e),this.preventClickEvent=!1}startPointerInteraction(){this.pointerInteractionState=i.Dragging,document.addEventListener("touchmove",d.preventDefaultBrowserBehaviour,{passive:!1}),this.raisePointerDragStartEvent()}stopPointerInteraction(){this.clearTouchDeviceInteractionTimer(),this.pointerInteractionState=i.Stopped,document.removeEventListener("touchmove",d.preventDefaultBrowserBehaviour),document.removeEventListener("pointermove",this.boundOnPointerMoveHandler),document.removeEventListener("pointerup",this.boundOnPointerUpHandler),document.removeEventListener("pointercancel",this.boundOnPointerCancelHandler),t.removeClassName(document.body,"dx-prevent-selection")}clearTouchDeviceInteractionTimer(){this.touchDeviceInteractionTimer&&(clearTimeout(this.touchDeviceInteractionTimer),delete this.touchDeviceInteractionTimer)}onTouchDeviceInteractionTimerTimeout(){this.pointerInteractionState===i.WaitingForDragging&&this.pointerDownContext&&this.pointerDownContext.isTouch&&(this.pointerDownContext.isLongTap=!0,this.startPointerInteraction(),this.clearTouchDeviceInteractionTimer())}isDistanceExceedLimit(t){return!this.pointerDownContext||(Math.abs(this.pointerDownContext.source.clientX-t.clientX)>4||Math.abs(this.pointerDownContext.source.clientY-t.clientY)>4)}raisePointerDragStartEvent(){if(!this.pointerDownContext)return;const t=new o({source:this.pointerDownContext.source,isTouch:this.pointerDownContext.isTouch,isLongTap:this.pointerDownContext.isLongTap});this.dispatchEvent(t)}}export{d as D,n as H,o as P,r as a,s as b,a as c};
