import{D as t}from"./dom-b082d2b1.js";import{e,c as o}from"./dom-utils-8b753f73.js";import"./_tslib-1f2a369a.js";let n;function i(t,i){i&&n&&n.clearHover();const l=(t=e(t)).querySelector(".dx-chart-tooltip");l&&o((()=>l.classList.remove("show")))}function l(e,l,s){e.tooltip={enabled:!1,forceEvents:!0,location:l.location},e.onTooltipHidden=function(t){const e=t.target;e&&(n===e&&i(t.element.closest("div.dx-blazor-widget"),!1),n=null)},e.onTooltipShown=async function(e){const i=e.target;if(!i||!i.series)return;await s.invokeMethodAsync("ShowTooltip",i.data,i.tag,i.series.index);const l=e.element.closest("div.dx-blazor-widget"),c=l.querySelector(".dx-chart-tooltip"),a=c.offsetParent;let d=e.x-t.getAbsolutePositionX(a);const r=(l.getBoundingClientRect().width+e.element.getBoundingClientRect().width)/2,f=c.getBoundingClientRect().width/2;let u=0;if(d+f>r)u=d+f-r,d=r-f;else if(d<f){const t=e.element.getBoundingClientRect().left-e.element.offsetParent.getBoundingClientRect().left;u=d-f-t,d=f+t}const g=c.querySelector(".dx-tooltip-pointer"),p=`calc(${e.y-t.getAbsolutePositionY(a)}px - 0.625rem)`,m=c.classList;o((function(){c.style.top=p,c.style.left=d+"px",g.style.left=`calc(50% + ${u}px)`,m.contains("show")||m.add("show")})),n=i}}const s={hideTooltip:i};export{s as default,i as hideTooltip,l as setupTooltip};
