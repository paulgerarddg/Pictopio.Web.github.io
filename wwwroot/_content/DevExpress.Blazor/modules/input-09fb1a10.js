import{D as t}from"./dom-b082d2b1.js";import{D as e}from"./dx-html-element-base-de595fb7.js";import{DxUIHandlersBridgeTagName as s}from"./dx-ui-handlers-bridge-4076ae57.js";import"./_tslib-1f2a369a.js";import"./data-qa-utils-8be7c726.js";class n{}var i;n.InputGroupAppendSelector=".dxbs-input-group-append",n.ClearButtonCssClass="dxbs-editor-clear-btn",function(t){t[t.Focus=1]="Focus",t[t.FocusOut=2]="FocusOut",t[t.ServerFocusOut=4]="ServerFocusOut",t[t.Input=8]="Input",t[t.Paste=16]="Paste",t[t.Wheel=32]="Wheel"}(i||(i={}));class u extends e{constructor(){super(...arguments),this.inputGroupObserver=new MutationObserver(this.inputGroupListener.bind(this)),this.highightObserver=new MutationObserver(this.highlightInputValue.bind(this)),this.proccessedEvents=0,this.boundOnInputFocusHandler=this.onInputFocus.bind(this),this.boundOnInputFocusOutHandler=this.onInputFocusOut.bind(this)}initializeComponent(){super.initializeComponent(),this.uiHandlersBridge=this.querySelector(s);const t=this.getInputGroupAppendElement();this.inputGroupObserver.observe(t,{childList:!0,attributeFilter:["class"]}),this.recalculateInputPadding(),this.initialSubscribeToEvents()}initialSubscribeToEvents(){const t=this.getInputElement();this.bitsHasEvent(this.proccessedEvents,i.Focus)&&t.addEventListener("focus",this.boundOnInputFocusHandler),this.bitsHasEvent(this.proccessedEvents,i.FocusOut)&&t.addEventListener("focusout",this.boundOnInputFocusOutHandler)}disposeComponent(){const t=this.getInputElement();t.removeEventListener("focus",this.boundOnInputFocusHandler),t.removeEventListener("focusout",this.boundOnInputFocusOutHandler),this.inputGroupObserver.disconnect(),this.highightObserver.disconnect()}onInputFocus(t){var e;const s=this.getInputElement(),n=0===s.selectionStart&&s.selectionEnd===(s.value?s.value.length:0)&&document.activeElement===s;this.highightObserver.observe(s,{attributeFilter:["data-need-highlight"]}),null===(e=this.uiHandlersBridge)||void 0===e||e.send("onFocusStateChanged",{focus:!0,needHighlight:n})}onInputFocusOut(t){var e;null===(e=this.uiHandlersBridge)||void 0===e||e.send("onFocusStateChanged",{focus:!1})}getInputElement(){return this.querySelector("input")}getInputGroupAppendElement(){return this.querySelector(n.InputGroupAppendSelector)}inputGroupListener(e){e.forEach((e=>{"childList"===e.type&&(e.addedNodes&&e.addedNodes.forEach((e=>{e instanceof HTMLElement&&!t.hasClassName(e,n.ClearButtonCssClass)&&this.registerButton(e)})),e.removedNodes&&e.removedNodes.forEach((e=>{e instanceof HTMLElement&&!t.hasClassName(e,n.ClearButtonCssClass)&&this.unregisterButton(e)})))})),this.recalculateInputPadding()}registerButton(t){}unregisterButton(t){}recalculateInputPadding(){const t=this.getInputElement(),e=this.getInputGroupAppendElement(),s=window.getComputedStyle(t),n=e.offsetWidth;parseFloat(s.paddingRight)!==n&&(t.style.paddingRight=n+"px")}highlightInputValue(){const t=this.getInputElement();document.activeElement===t&&(t.select(),t.removeAttribute("data-need-highlight"),this.highightObserver.disconnect())}static get baseObservedAttributes(){return["proccessed-events"]}attributeChangedCallback(t,e,s){if("proccessed-events"===t)this.onProccessedEventsChanged(s);this.attributeChangedCallbackInternal(t,e,s)}onProccessedEventsChanged(t){const e=parseInt(t),s=e^this.proccessedEvents,n=s&e,i=s&this.proccessedEvents;this.proccessedEvents=e,this.subscribeNewEvents(n),this.unsubscribeOldEvents(i)}subscribeNewEvents(t){const e=this.getInputElement();t&&e&&(this.bitsHasEvent(t,i.Focus)&&e.addEventListener("focus",this.boundOnInputFocusHandler),this.bitsHasEvent(t,i.FocusOut)&&e.addEventListener("focusout",this.boundOnInputFocusOutHandler))}unsubscribeOldEvents(t){const e=this.getInputElement();t&&e&&(this.bitsHasEvent(t,i.Focus)&&e.removeEventListener("focus",this.boundOnInputFocusHandler),this.bitsHasEvent(t,i.FocusOut)&&e.removeEventListener("focusout",this.boundOnInputFocusOutHandler))}bitsHasEvent(t,e){return(t&e)>0}attributeChangedCallbackInternal(t,e,s){}}customElements.define("dxbl-input-editor",class extends u{static get observedAttributes(){return this.baseObservedAttributes}});const o={loadModule:function(){}};export{u as DxInputEditorBase,i as EditorsProccessedEvents,o as default};
